<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
    <message-converters>
        <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
            <beans:property name="supportedMediaTypes">
                <beans:list>
                	<beans:value>text/html;charset=UTF-8</beans:value>
                </beans:list>
            </beans:property>
        </beans:bean>
    </message-converters>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- fileUpload -->
	<!-- <beans:property name="defaultEncoding" value="utf-8"></beans:property>
	업로드시 최대 크기 1024 * 1024 * 10 bytes 10MB   -1지정시 무제한-->
	
	<!--<beans:property name="maxUploadSize" value="104857560"></beans:property>
	하나의파일 최대크기 1024 * 1024 * 2 bytes 2MB -->
	
	<!-- <beans:property name="maxUploadSizePerFile" value="2097152"></beans:property>
	메모리상에서 유지하는 최대의 크기 -->
	
	<!--<beans:property name="maxInMemorySize" value="10485756"></beans:property>
	maxInMemorySize 크기 이상의 파일은  uploadTempDir에 임시파일형태로 보관 임시폴더는 자동으로 생성되는것은아님-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
            <beans:property name="defaultEncoding" value="utf-8"></beans:property>
            <beans:property name="maxUploadSize" value="104857560"></beans:property>
            <beans:property name="maxUploadSizePerFile" value="2097152"></beans:property>
            <beans:property name="maxInMemorySize" value="10485756"></beans:property>
            <beans:property name="uploadTempDir" value="file:/Users/lth/filesave"></beans:property>
     </beans:bean>
	
	<context:component-scan base-package="com.campstory.controller" />
	<context:component-scan base-package="com.campstory.command" />

	<!-- 	
	<context:component-scan base-package="org.mvc.exception" />
	-->
		<!-- <jsp:useBean> 과 같은 역할 /  생성자 / set 호출 가능   
			<beans:constructor-arg /> 생성자
			<beans:property name="" /> set 메서드 호출
			ref = 참조 (레퍼런스)
		 -->
		<!-- <beans:bean id="memberDTO" class="com.campstory.bean" />  -->
	
	<beans:bean id="campDTO" class="com.campstory.bean.CampDTO" />	
	<beans:bean id="campTalkDTO" class="com.campstory.bean.CampTalkDTO" />	
	<beans:bean id="csDTO" class="com.campstory.bean.CsDTO" />	
	<beans:bean id="memberDTO" class="com.campstory.bean.MemberDTO" />	
	<beans:bean id="keywordDTO" class="com.campstory.bean.KeywordDTO" />	
	
		
	
	<context:component-scan base-package="com.campstory" />
	<context:component-scan base-package="org.mvc.aop" />
   <!-- AOP Advice 클래스 자동 등록 -->
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy> 
	
	<!--  
	<beans:bean id="advice" class="org.mvc.aop.LogXmlAdvice"/>
	<beans:bean id="sessionCh" class="org.mvc.aop.SessionCheckAdvice"/>
	
	<aop:config>
		<aop:pointcut expression="execution(* org.mvc.controller.Sample*.*(..))" id="pc1"/>
		<aop:pointcut expression="execution(* org.mvc.controller..member*(..))" id="pc2"/>
		<aop:aspect id="test1" ref="advice">-->
		<!-- <aop:before method="before" pointcut-ref="pc1"/> 
			<aop:after method="after" pointcut-ref="pc1"/>
		-->	
		<!-- 
			<aop:around method="around" pointcut-ref="pc1"/>
		</aop:aspect>
		<aop:aspect id="test2" ref="sessionCh">
			<aop:around method="around" pointcut-ref="pc2"/>
		</aop:aspect>
	</aop:config>	
	-->
</beans:beans>
